# Configuração do servidor para QuizLiftOff
server {
    listen 80;
    listen [::]:80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Configurações de cache para assets estáticos
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff";
        
        # Compressão para assets
        gzip_static on;
        
        # Fallback se arquivo não existir
        try_files $uri =404;
    }

    # Configurações para arquivos de manifest e service worker
    location ~* \.(webmanifest|manifest\.json)$ {
        expires 1d;
        add_header Cache-Control "public";
        add_header Content-Type "application/manifest+json";
    }

    # Service Worker - sem cache
    location = /sw.js {
        expires off;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }

    # API routes - rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        # Headers de segurança para API
        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "DENY";
        
        # Proxy para backend se necessário
        # proxy_pass http://backend;
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        
        return 404; # Remover quando tiver backend
    }

    # Rotas de autenticação - rate limiting mais restritivo
    location ~ ^/(login|signup|reset-password) {
        limit_req zone=login burst=5 nodelay;
        try_files $uri $uri/ /index.html;
    }

    # Rota principal da SPA
    location / {
        # Tentar servir arquivo, depois diretório, depois index.html
        try_files $uri $uri/ /index.html;
        
        # Headers para SPA
        add_header X-Content-Type-Options "nosniff";
        
        # Cache para HTML
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }

    # Rota específica para index.html - sem cache
    location = /index.html {
        expires off;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }

    # Bloquear acesso a arquivos sensíveis
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Bloquear acesso a arquivos de configuração
    location ~* \.(env|config|ini|log|sh|sql|conf)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Health check endpoint
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Robots.txt
    location = /robots.txt {
        access_log off;
        log_not_found off;
        expires 1d;
    }

    # Sitemap
    location = /sitemap.xml {
        access_log off;
        expires 1d;
        add_header Content-Type application/xml;
    }

    # Error pages customizadas
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
    }
    
    location = /50x.html {
        internal;
    }
}

# Configuração HTTPS (descomentada quando tiver SSL)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name yourdomain.com www.yourdomain.com;
#     root /usr/share/nginx/html;
#     index index.html;
# 
#     # Certificados SSL
#     ssl_certificate /etc/ssl/certs/yourdomain.crt;
#     ssl_certificate_key /etc/ssl/private/yourdomain.key;
# 
#     # Configurações SSL modernas
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
# 
#     # HSTS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
# 
#     # Incluir as mesmas configurações do servidor HTTP
#     include /etc/nginx/conf.d/common-locations.conf;
# }
# 
# # Redirect HTTP para HTTPS
# server {
#     listen 80;
#     listen [::]:80;
#     server_name yourdomain.com www.yourdomain.com;
#     return 301 https://$server_name$request_uri;
# }